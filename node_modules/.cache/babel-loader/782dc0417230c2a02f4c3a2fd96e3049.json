{"ast":null,"code":"import*as actionTypes from\"./actionTypes\";import axios from\"axios\";export var authStart=function authStart(){return{type:actionTypes.AUTH_START};};export var authSuccess=function authSuccess(token){return{type:actionTypes.AUTH_SUCCESS,token:token};};export var authFail=function authFail(error){return{type:actionTypes.AUTH_FAIL,error:error};};export var logout=function logout(){localStorage.removeItem(\"user\");localStorage.removeItem(\"expirationDate\");return{type:actionTypes.AUTH_LOGOUT};};export var checkAuthTimeout=function checkAuthTimeout(expirationDate){return function(dispatch){setTimeout(function(){dispatch(logout());},expirationDate*1000);};};export var authLogin=function authLogin(username,password){return function(dispatch){dispatch(authStart());axios.post(\"http://127.0.0.1:8000/rest-auth/login/\",{username:username,password:password}).then(function(res){var token=res.data.key;var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem(\"token\",token);localStorage.setItem(\"expirationDate\",expirationDate);dispatch(authSuccess(token));dispatch(checkAuthTimeout(3600));}).catch(function(err){dispatch(authFail(err));});};};export var authSignup=function authSignup(username,email,password1,password2){return function(dispatch){dispatch(authStart());axios.post(\"http://127.0.0.1:8000/rest-auth/registration/\",{username:username,email:email,password1:password1,password2:password2}).then(function(res){var token=res.data.key;var expirationDate=new Date(new Date().getTime()+3600*1000);localStorage.setItem(\"token\",token);localStorage.setItem(\"expirationDate\",expirationDate);dispatch(authSuccess(token));dispatch(checkAuthTimeout(3600));}).catch(function(err){dispatch(authFail(err));});};};export var authCheckState=function authCheckState(){return function(dispatch){var token=localStorage.getItem(\"token\");if(token===undefined){dispatch(logout());}else{var expirationDate=new Date(localStorage.getItem(\"expirationDate\"));if(expirationDate<=new Date()){dispatch(logout());}else{dispatch(authSuccess(token));dispatch(checkAuthTimeout((expirationDate.getTime()-new Date().getTime())/1000));}}};};","map":{"version":3,"sources":["/home/parth/development/full_stack/djReact/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationDate","dispatch","setTimeout","authLogin","username","password","post","then","res","data","key","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (token) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const checkAuthTimeout = (expirationDate) => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationDate * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n        username: username,\n        password: password,\n      })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2,\n      })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}