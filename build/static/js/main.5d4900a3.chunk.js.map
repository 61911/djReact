{"version":3,"sources":["components/Create/Form/Form.js","components/Create/Create.js","components/Articles/Article/Article.js","components/Articles/Articles.js","containers/ArticleListView.js","containers/ArticleDetailView.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","router.js","components/Navbar/Navbar.js","components/SideBar/SideBar.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["CustomForm","state","image","handleFormSubmit","event","requestType","articleID","preventDefault","author","target","elements","value","title","content","form_data","FormData","append","name","axios","post","headers","then","res","console","log","data","catch","err","put","selectedFile","error","fileChangedHandler","file","files","setState","Form","onSubmit","props","FormGroup","Label","for","Input","type","placeholder","onChange","this","Button","color","htmlType","Component","Create","article","class","src","alt","to","style","date_posted","id","Articles","map","item","key","ArticleList","articles","get","ArticleDetailView","match","params","authSuccess","token","authFail","logout","localStorage","removeItem","checkAuthTimeout","expirationDate","dispatch","setTimeout","Login","submitHandler","username","password","onAuth","history","push","errorMessage","Alert","message","loading","Spinner","animation","connect","Date","getTime","setItem","actions","Signup","email","password1","password2","BaseRouter","exact","path","component","ArticleDetail","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","isAuthenticated","onClick","SideBar","App","onTryAutoSignup","getItem","undefined","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","intialState","authStart","action","authLogout","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gWAqGeA,E,4MAhGbC,MAAQ,CACNC,MAAO,M,EAGTC,iBAAmB,SAACC,EAAOC,EAAaC,GACtCF,EAAMG,iBACN,IAAMC,EAASJ,EAAMK,OAAOC,SAASF,OAAOG,MACtCC,EAAQR,EAAMK,OAAOC,SAASE,MAAMD,MACpCE,EAAUT,EAAMK,OAAOC,SAASG,QAAQF,MAG1CG,EAAY,IAAIC,SASpB,OARAD,EAAUE,OAAO,KAAMV,GACvBQ,EAAUE,OAAO,SAAUR,GAC3BM,EAAUE,OAAO,QAASJ,GAC1BE,EAAUE,OAAO,UAAWH,GACJ,MAApB,EAAKZ,MAAMC,OACbY,EAAUE,OAAO,QAAS,EAAKf,MAAMC,MAAO,EAAKD,MAAMC,MAAMe,MAGvDZ,GACN,IAAK,OACH,OAAOa,IACJC,KAbG,6BAaOL,EAAW,CACpBM,QAAS,CACP,eAAgB,yBAGnBC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAIG,SAEjBC,OAAM,SAACC,GAAD,OAASJ,QAAQC,IAAIG,MAChC,IAAK,MACH,OAAOT,IACJU,IADI,oCAC6BtB,EAD7B,KAC2C,CAC9CE,OAAQA,EACRI,MAAOA,EACPC,QAASA,EACTX,MAAO,EAAKD,MAAM4B,eAEnBR,MAAK,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC1BI,OAAM,SAACI,GAAD,OAAWP,QAAQC,IAAIM,MAEpCP,QAAQC,IAAI,OACZD,QAAQC,IAAIhB,EAAQI,EAAOC,I,EAG7BkB,mBAAqB,SAAC3B,GACpB,IAAM4B,EAAO5B,EAAMK,OAAOwB,MAAM,GAChC,EAAKC,SAAS,CACZhC,MAAO8B,K,uDAGD,IAAD,OACP,OACE,kBAACG,EAAA,EAAD,CACEC,SAAU,SAAChC,GAAD,OACR,EAAKD,iBACHC,EACA,EAAKiC,MAAMhC,YACX,EAAKgC,MAAM/B,aAIf,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,YACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOzB,KAAK,SAAS0B,YAAY,cAE/C,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,WACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOzB,KAAK,QAAQ0B,YAAY,wBAE9C,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,aACA,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLzB,KAAK,UACL0B,YAAY,0BAGhB,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,eAAX,wBACA,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLzB,KAAK,cACL2B,SAAUC,KAAKd,sBAGnB,kBAACe,EAAA,EAAD,CAAQC,MAAM,UAAUC,SAAS,UAAjC,e,GAzFiBC,aCGVC,EAJA,SAACb,GACd,OAAO,kBAAC,EAAD,CAAYhC,YAAY,OAAOC,UAAW,QCwBpC6C,G,MAxBC,SAACd,GACf,OACE,6BAASe,MAAM,yBACb,yBACEC,IAAKhB,EAAMnC,MACXoD,IAAI,YACJF,MAAM,+BAER,yBAAKA,MAAM,cACT,yBAAKA,MAAM,oBACT,kBAAC,IAAD,CAAMA,MAAM,OAAOG,GAAG,IAAIC,MAAO,CAAET,MAAO,UACvCV,EAAM7B,QAET,2BAAO4C,MAAM,cAAcf,EAAMoB,cAEnC,4BACE,kBAAC,IAAD,CAAMF,GAAE,oBAAelB,EAAMqB,KAAOrB,EAAMzB,QAE5C,uBAAGwC,MAAM,mBAAmBf,EAAMxB,aCN3B8C,EAbE,SAACtB,GAAD,OACfA,EAAMZ,KAAKmC,KAAI,SAACC,GACd,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAKH,GACVlD,OAAQqD,EAAKrD,OACbI,MAAOiD,EAAKjD,MACZC,QAASgD,EAAKhD,QACd4C,YAAaI,EAAKJ,YAClBvD,MAAO2D,EAAK3D,YCWL6D,E,4MAjBb9D,MAAQ,CACN+D,SAAU,I,kEAGS,IAAD,OAClB9C,IAAM+C,IAAN,8BAAwC5C,MAAK,SAACC,GAC5C,EAAKY,SAAS,CACZ8B,SAAU1C,EAAIG,OAEhBF,QAAQC,IAAIF,EAAIG,W,+BAIlB,OAAO,kBAAC,EAAD,CAAUA,KAAMoB,KAAK5C,MAAM+D,e,GAdZf,aCkCXiB,E,4MAhCbjE,MAAQ,CACNkD,QAAS,I,kEAGU,IAAD,OACZ7C,EAAYuC,KAAKR,MAAM8B,MAAMC,OAAO9D,UAC1CY,IAAM+C,IAAN,oCAAuC3D,IAAae,MAAK,SAACC,GACxD,EAAKY,SAAS,CACZiB,QAAS7B,EAAIG,Y,+BAKjB,OACE,6BACE,kBAAC,EAAD,CACEiC,GAAIb,KAAK5C,MAAMkD,QAAQO,GACvBlD,OAAQqC,KAAK5C,MAAMkD,QAAQ3C,OAC3BI,MAAOiC,KAAK5C,MAAMkD,QAAQvC,MAC1BC,QAASgC,KAAK5C,MAAMkD,QAAQtC,QAC5B4C,YAAaZ,KAAK5C,MAAMkD,QAAQM,YAChCvD,MAAO2C,KAAK5C,MAAMkD,QAAQjD,QAE5B,kBAAC,EAAD,CACEG,YAAY,MACZC,UAAWuC,KAAKR,MAAM8B,MAAMC,OAAO9D,iB,GA1Bb2C,a,gBCGnBoB,EAAc,SAACC,GAC1B,MAAO,CACL5B,KCVwB,eDWxB4B,MAAOA,IAIEC,EAAW,SAACzC,GACvB,MAAO,CACLY,KCfqB,YDgBrBZ,MAAOA,IAIE0C,EAAS,WAGpB,OAFAC,aAAaC,WAAW,QACxBD,aAAaC,WAAW,kBACjB,CACLhC,KCvBuB,gBD2BdiC,EAAmB,SAACC,GAC/B,OAAO,SAACC,GACNC,YAAW,WACTD,EAASL,OACS,IAAjBI,KErBDG,E,4MACJC,cAAgB,SAAC5E,GACfA,EAAMG,iBACN,IAAM0E,EAAW7E,EAAMK,OAAOC,SAASuE,SAAStE,MAC1CuE,EAAW9E,EAAMK,OAAOC,SAASwE,SAASvE,MAC3C,EAAK0B,MAAMP,OACd,EAAKO,MAAM8C,OAAOF,EAAUC,GAE9B,EAAK7C,MAAM+C,QAAQC,KAAK,M,uDAGxB,IAAIC,EAAe,KAInB,OAHIzC,KAAKR,MAAMP,QACbwD,EAAe,kBAACC,EAAA,EAAD,CAAOxC,MAAM,UAAUF,KAAKR,MAAMP,MAAM0D,UAGvD,6BACGF,EACAzC,KAAKR,MAAMoD,QACV,kBAACC,EAAA,EAAD,CAASC,UAAU,SAEnB,kBAACxD,EAAA,EAAD,CAAMC,SAAUS,KAAKmC,eACnB,kBAAC1C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,YACA,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLzB,KAAK,WACL0B,YAAY,yBAGhB,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,mBAAX,YACA,kBAACC,EAAA,EAAD,CACEC,KAAK,WACLzB,KAAK,WACLyC,GAAG,kBACHf,YAAY,yBAGhB,kBAACG,EAAA,EAAD,CAAQE,SAAS,UAAjB,UACA,yBAAKI,MAAM,QACT,2BAAOA,MAAM,cAAb,mBAEE,kBAAC,IAAD,CAAMA,MAAM,OAAOG,GAAG,YAAtB,uB,GA3CIN,aAqEL2C,eAdS,SAAC3F,GACvB,MAAO,CACLwF,QAASxF,EAAMwF,QACf3D,MAAO7B,EAAM6B,UAIU,SAAC+C,GAC1B,MAAO,CACLM,OAAQ,SAACF,EAAUC,GAAX,OACNL,EFxCmB,SAACI,EAAUC,GAClC,OAAO,SAACL,GACNA,EArCK,CACLnC,KCLsB,eD0CtBxB,IACGC,KAAK,yCAA0C,CAC9C8D,SAAUA,EACVC,SAAUA,IAEX7D,MAAK,SAACC,GACL,IAAMgD,EAAQhD,EAAIG,KAAKqC,IACjBc,EAAiB,IAAIiB,MAAK,IAAIA,MAAOC,UAAY,MACvDrB,aAAasB,QAAQ,QAASzB,GAC9BG,aAAasB,QAAQ,iBAAkBnB,GACvCC,EAASR,EAAYC,IACrBO,EAASF,EAAiB,UAE3BjD,OAAM,SAACC,GACNkD,EAASN,EAAS5C,QEuBXqE,CAAkBf,EAAUC,QAI5BU,CAA6Cb,GC7EtDkB,E,4MACJjB,cAAgB,SAAC5E,GACfA,EAAMG,iBACN,IAAM0E,EAAW7E,EAAMK,OAAOC,SAASuE,SAAStE,MAC1CuF,EAAQ9F,EAAMK,OAAOC,SAASwF,MAAMvF,MACpCwF,EAAY/F,EAAMK,OAAOC,SAASyF,UAAUxF,MAC5CyF,EAAYhG,EAAMK,OAAOC,SAAS0F,UAAUzF,MAC7C,EAAK0B,MAAMP,OACd,EAAKO,MAAM8C,OAAOF,EAAUiB,EAAOC,EAAWC,GAEhD,EAAK/D,MAAM+C,QAAQC,KAAK,KAExB9D,QAAQC,IAAIyD,EAAUiB,EAAOC,EAAWC,I,uDAGxC,IAAId,EAAe,KAInB,OAHIzC,KAAKR,MAAMP,QACbwD,EAAe,kBAACC,EAAA,EAAD,CAAOxC,MAAM,UAAUF,KAAKR,MAAMP,MAAM0D,UAGvD,6BACGF,EACD,kBAACnD,EAAA,EAAD,CAAMC,SAAUS,KAAKmC,eACnB,kBAAC1C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,YACA,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLzB,KAAK,WACL0B,YAAY,yBAGhB,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLzB,KAAK,QACLyC,GAAG,QACHf,YAAY,uBAGhB,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,oBAAX,YACA,kBAACC,EAAA,EAAD,CACEC,KAAK,WACLzB,KAAK,YACLyC,GAAG,mBACHf,YAAY,yBAGhB,kBAACL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,oBAAX,oBACA,kBAACC,EAAA,EAAD,CACEC,KAAK,WACLzB,KAAK,YACLyC,GAAG,mBACHf,YAAY,2BAGhB,kBAACG,EAAA,EAAD,CAAQE,SAAS,UAAjB,UACA,yBAAKI,MAAM,QACT,2BAAOA,MAAM,cAAb,2BAEE,kBAAC,IAAD,CAAMA,MAAM,OAAOG,GAAG,WAAtB,qB,GA9DON,aAuFN2C,eAdS,SAAC3F,GACvB,MAAO,CACLwF,QAASxF,EAAMwF,QACf3D,MAAO7B,EAAM6B,UAIU,SAAC+C,GAC1B,MAAO,CACLM,OAAQ,SAACF,EAAUiB,EAAOC,EAAWC,GAA7B,OACNvB,EH5BoB,SAACI,EAAUiB,EAAOC,EAAWC,GACrD,OAAO,SAACvB,GACNA,EA3DK,CACLnC,KCLsB,eDgEtBxB,IACGC,KAAK,gDAAiD,CACrD8D,SAAUA,EACViB,MAAOA,EACPC,UAAWA,EACXC,UAAWA,IAEZ/E,MAAK,SAACC,GACL,IAAMgD,EAAQhD,EAAIG,KAAKqC,IACjBc,EAAiB,IAAIiB,MAAK,IAAIA,MAAOC,UAAY,MACvDrB,aAAasB,QAAQ,QAASzB,GAC9BG,aAAasB,QAAQ,iBAAkBnB,GACvCC,EAASR,EAAYC,IACrBO,EAASF,EAAiB,UAE3BjD,OAAM,SAACC,GACNkD,EAASN,EAAS5C,QGSXqE,CAAmBf,EAAUiB,EAAOC,EAAWC,QAI/CR,CAA6CK,GC1E7CI,EAVI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzC,IACjC,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,UAAUC,UAAWzB,IACvC,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,WAAWC,UAAWtD,IACxC,kBAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,wBAAwBC,UAAWC,IACrD,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWP,MCTtCS,G,6KAEF,OACE,6BACE,yBAAKtD,MAAM,0DACT,yBAAKA,MAAM,aACT,kBAAC,IAAD,CAAMA,MAAM,oBAAoBG,GAAG,KAAnC,qBAGA,4BACEH,MAAM,iBACNV,KAAK,SACLiE,cAAY,WACZC,cAAY,gBACZC,gBAAc,eACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAM3D,MAAM,yBAEd,yBAAKA,MAAM,2BAA2BM,GAAG,gBACvC,yBAAKN,MAAM,sBACT,kBAAC,IAAD,CACEA,MAAM,oBACNG,GAAG,IACHC,MAAO,CAAET,MAAO,YAHlB,QAOA,kBAAC,IAAD,CACEK,MAAM,oBACNG,GAAG,WACHC,MAAO,CAAET,MAAO,YAHlB,WAQDF,KAAKR,MAAM2E,gBACV,kBAAC,IAAD,CACE5D,MAAM,oBACNG,GAAG,IACHC,MAAO,CAAET,MAAO,WAChBkE,QAASpE,KAAKR,MAAMmC,QAJtB,UASA,kBAAC,IAAD,CACEpB,MAAM,oBACNG,GAAG,UACHC,MAAO,CAAET,MAAO,YAHlB,iB,GA/CKE,cAqEN2C,cAAQ,MANI,SAACf,GAC1B,MAAO,CACLL,OAAQ,kBAAMK,EAASmB,SAIZJ,CAAkCc,GC1DlCQ,G,MAfC,SAAC7E,GACf,OACE,yBAAKe,MAAM,QACT,2CACA,uBAAGA,MAAM,cAAT,gDACA,wBAAIA,MAAM,cACR,wBAAIA,MAAM,yCAAV,gBACA,wBAAIA,MAAM,yCAAV,iBACA,wBAAIA,MAAM,yCAAV,aACA,wBAAIA,MAAM,yCAAV,WCFF+D,E,kLAEFtE,KAAKR,MAAM+E,oB,+BAGX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAWvE,KAAKR,OACjB,yBAAKe,MAAM,aACT,yBAAKA,MAAM,OACT,yBAAKA,MAAM,YACT,kBAAC,EAAD,OAEF,yBAAKA,MAAM,YACT,kBAAC,EAAD,c,GAdIH,aAiCH2C,eAXS,SAAC3F,GACvB,MAAO,CACL+G,gBAAgC,MAAf/G,EAAMqE,UAIA,SAACO,GAC1B,MAAO,CACLuC,gBAAiB,kBAAMvC,GP+ClB,SAACA,GACN,IAAMP,EAAQG,aAAa4C,QAAQ,SACnC,QAAcC,IAAVhD,EACFO,EAASL,SACJ,CACL,IAAMI,EAAiB,IAAIiB,KAAKpB,aAAa4C,QAAQ,mBACjDzC,GAAkB,IAAIiB,KACxBhB,EAASL,MAETK,EAASR,EAAYC,IACrBO,EACEF,GACGC,EAAekB,WAAY,IAAID,MAAOC,WAAa,eOxDjDF,CAA6CuB,GC9BxCI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvD,MACvB,2D,4BClBOwD,EAAe,SAACC,EAAWC,GACtC,OAAO,2BACFD,GACAC,ICADC,EAAc,CAClBxD,MAAO,KACPxC,MAAO,KACP2D,QAAS,MAGLsC,EAAY,SAAC9H,EAAO+H,GACxB,OAAOL,EAAa1H,EAAO,CACzB6B,MAAO,KACP2D,SAAS,KAIPpB,EAAc,SAACpE,EAAO+H,GAC1B,OAAOL,EAAa1H,EAAO,CACzBqE,MAAO0D,EAAO1D,MACdxC,MAAO,KACP2D,SAAS,KAIPlB,EAAW,SAACtE,EAAO+H,GACvB,OAAOL,EAAa1H,EAAO,CACzB6B,MAAOkG,EAAOlG,MACd2D,SAAS,KAIPwC,EAAa,SAAChI,EAAO+H,GACzB,OAAOL,EAAa1H,EAAO,CACzBqE,MAAO,QAmBI4D,EAfC,WAAkC,IAAjCjI,EAAgC,uDAAxB6H,EAAaE,EAAW,uCAC/C,OAAQA,EAAOtF,MACb,ITvCsB,aSwCpB,OAAOqF,EAAU9H,GACnB,ITxCwB,eSyCtB,OAAOoE,EAAYpE,EAAO+H,GAC5B,ITxCqB,YSyCnB,OAAOzD,EAAStE,EAAO+H,GACzB,ITzCuB,cS0CrB,OAAOC,EAAWhI,GACpB,QACE,OAAOA,ICtCPkI,EAAmBX,OAAOY,sCAAwCC,IAElEC,GAAQC,YAAYL,EAASC,EAAiBK,YAAgBC,OAE9DC,GACJ,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,EAAD,OAIJK,IAASC,OAAOF,GAAKG,SAASC,eAAe,SH+GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5H,MAAK,SAAA6H,GACJA,EAAaC,gBAEdzH,OAAM,SAAAI,GACLP,QAAQO,MAAMA,EAAM0D,c","file":"static/js/main.5d4900a3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport axios from \"axios\";\n\nclass CustomForm extends Component {\n  state = {\n    image: null,\n  };\n\n  handleFormSubmit = (event, requestType, articleID) => {\n    event.preventDefault();\n    const author = event.target.elements.author.value;\n    const title = event.target.elements.title.value;\n    const content = event.target.elements.content.value;\n\n    let url = \"http://127.0.0.1:8000/api/\";\n    let form_data = new FormData();\n    form_data.append(\"id\", articleID);\n    form_data.append(\"author\", author);\n    form_data.append(\"title\", title);\n    form_data.append(\"content\", content);\n    if (this.state.image != null) {\n      form_data.append(\"image\", this.state.image, this.state.image.name);\n    }\n\n    switch (requestType) {\n      case \"post\":\n        return axios\n          .post(url, form_data, {\n            headers: {\n              \"content-type\": \"multipart/form-data\",\n            },\n          })\n          .then((res) => {\n            console.log(res.data);\n          })\n          .catch((err) => console.log(err));\n      case \"put\":\n        return axios\n          .put(`http://127.0.0.1:8000/api/${articleID}/`, {\n            author: author,\n            title: title,\n            content: content,\n            image: this.state.selectedFile,\n          })\n          .then((res) => console.log(res))\n          .catch((error) => console.log(error));\n    }\n    console.log(\"Hey\");\n    console.log(author, title, content);\n  };\n\n  fileChangedHandler = (event) => {\n    const file = event.target.files[0];\n    this.setState({\n      image: file,\n    });\n  };\n  render() {\n    return (\n      <Form\n        onSubmit={(event) =>\n          this.handleFormSubmit(\n            event,\n            this.props.requestType,\n            this.props.articleID\n          )\n        }\n      >\n        <FormGroup>\n          <Label for=\"Author\"> Author </Label>\n          <Input type=\"text\" name=\"author\" placeholder=\"username\" />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"Title\"> Title </Label>\n          <Input type=\"text\" name=\"title\" placeholder=\"with a placeholder\" />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"Content\"> Content </Label>\n          <Input\n            type=\"text\"\n            name=\"content\"\n            placeholder=\"write some content..\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"imageUpload\"> Upload your image. </Label>\n          <Input\n            type=\"file\"\n            name=\"imageUpload\"\n            onChange={this.fileChangedHandler}\n          />\n        </FormGroup>\n        <Button color=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default CustomForm;\n","import React from \"react\";\nimport CustomForm from \"./Form/Form\";\n\nconst Create = (props) => {\n  return <CustomForm requestType=\"post\" articleID={null} />;\n};\n\nexport default Create;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Article.css\";\nconst article = (props) => {\n  return (\n    <article class=\"media content-section\">\n      <img\n        src={props.image}\n        alt=\"not found\"\n        class=\"rounded-circle article-img\"\n      />\n      <div class=\"media-body\">\n        <div class=\"article-metadata\">\n          <Link class=\"mr-2\" to=\"#\" style={{ color: \"black\" }}>\n            {props.author}\n          </Link>\n          <small class=\"text-muted\">{props.date_posted}</small>\n        </div>\n        <h2>\n          <Link to={`/articles/${props.id}`}>{props.title}</Link>\n        </h2>\n        <p class=\"article-content\">{props.content}</p>\n      </div>\n    </article>\n  );\n};\n\nexport default article;\n","import React from \"react\";\nimport Article from \"./Article/Article\";\n\nconst Articles = (props) =>\n  props.data.map((item) => {\n    return (\n      <Article\n        key={item.id}\n        author={item.author}\n        title={item.title}\n        content={item.content}\n        date_posted={item.date_posted}\n        image={item.image}\n      />\n    );\n  });\nexport default Articles;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Articles from \"../components/Articles/Articles\";\n\nclass ArticleList extends Component {\n  state = {\n    articles: [],\n  };\n\n  componentDidMount() {\n    axios.get(`http://127.0.0.1:8000/api/`).then((res) => {\n      this.setState({\n        articles: res.data,\n      });\n      console.log(res.data);\n    });\n  }\n  render() {\n    return <Articles data={this.state.articles} />;\n  }\n}\n\nexport default ArticleList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Article from \"../components/Articles/Article/Article\";\nimport CustomForm from \"../components/Create/Form/Form\";\n\nclass ArticleDetailView extends Component {\n  state = {\n    article: {},\n  };\n\n  componentDidMount() {\n    const articleID = this.props.match.params.articleID;\n    axios.get(`http://127.0.0.1:8000/api/${articleID}`).then((res) => {\n      this.setState({\n        article: res.data,\n      });\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Article\n          id={this.state.article.id}\n          author={this.state.article.author}\n          title={this.state.article.title}\n          content={this.state.article.content}\n          date_posted={this.state.article.date_posted}\n          image={this.state.article.image}\n        />\n        <CustomForm\n          requestType=\"put\"\n          articleID={this.props.match.params.articleID}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ArticleDetailView;\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (token) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const checkAuthTimeout = (expirationDate) => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationDate * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n        username: username,\n        password: password,\n      })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/rest-auth/registration/\", {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2,\n      })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_LOGIN = \"AUTH_LOGIN\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Spinner,\n  Alert,\n} from \"reactstrap\";\nimport * as actions from \"../store/actions/auth\";\n\nclass Login extends Component {\n  submitHandler = (event) => {\n    event.preventDefault();\n    const username = event.target.elements.username.value;\n    const password = event.target.elements.password.value;\n    if (!this.props.error) {\n      this.props.onAuth(username, password);\n    }\n    this.props.history.push(\"/\");\n  };\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = <Alert color=\"danger\">{this.props.error.message}</Alert>;\n    }\n    return (\n      <div>\n        {errorMessage}\n        {this.props.loading ? (\n          <Spinner animation=\"grow\" />\n        ) : (\n          <Form onSubmit={this.submitHandler}>\n            <FormGroup>\n              <Label for=\"text\">username</Label>\n              <Input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"enter your username\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"examplePassword\"\n                placeholder=\"Enter your password\"\n              />\n            </FormGroup>\n            <Button htmlType=\"submit\">Submit</Button>\n            <div class=\"pt-3\">\n              <small class=\"text-muted\">\n                Need An Account?\n                <Link class=\"ml-2\" to=\"/signup/\">\n                  Sign Up Now\n                </Link>\n              </small>\n            </div>\n          </Form>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (username, password) =>\n      dispatch(actions.authLogin(username, password)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\nimport * as actions from \"../store/actions/auth\";\n\nclass Signup extends Component {\n  submitHandler = (event) => {\n    event.preventDefault();\n    const username = event.target.elements.username.value;\n    const email = event.target.elements.email.value;\n    const password1 = event.target.elements.password1.value;\n    const password2 = event.target.elements.password2.value;\n    if (!this.props.error) {\n      this.props.onAuth(username, email, password1, password2);\n    }\n    this.props.history.push(\"/\");\n\n    console.log(username, email, password1, password2);\n  };\n  render() {\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = <Alert color=\"danger\">{this.props.error.message}</Alert>;\n    }\n    return (\n      <div>\n        {errorMessage}\n        <Form onSubmit={this.submitHandler}>\n          <FormGroup>\n            <Label for=\"text\">username</Label>\n            <Input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"enter your username\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"email\">email</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"Enter your E-mail\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword1\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password1\"\n              id=\"examplePassword1\"\n              placeholder=\"Enter your password\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword2\">confirm Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password2\"\n              id=\"examplePassword2\"\n              placeholder=\"confirm your password\"\n            />\n          </FormGroup>\n          <Button htmlType=\"submit\">Submit</Button>\n          <div class=\"pt-3\">\n            <small class=\"text-muted\">\n              Already have An Account?\n              <Link class=\"ml-2\" to=\"/login/\">\n                Login Now\n              </Link>\n            </small>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.loading,\n    error: state.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (username, email, password1, password2) =>\n      dispatch(actions.authSignup(username, email, password1, password2)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Create from \"./components/Create/Create\";\nimport ArticleList from \"./containers/ArticleListView\";\nimport ArticleDetail from \"./containers/ArticleDetailView\";\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\n\nconst BaseRouter = () => (\n  <Switch>\n    <Route exact path=\"/\" component={ArticleList} />\n    <Route exact path=\"/login/\" component={Login} />\n    <Route exact path=\"/create/\" component={Create} />\n    <Route exact path=\"/articles/:articleID/\" component={ArticleDetail} />\n    <Route exact path=\"/signup/\" component={Signup} />\n  </Switch>\n);\n\nexport default BaseRouter;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport * as actions from \"../../store/actions/auth\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div>\n        <nav class=\"navbar navbar-expand-md navbar-dark bg-steel fixed-top\">\n          <div class=\"container\">\n            <Link class=\"navbar-brand mr-4\" to=\"/\">\n              Django React Blog\n            </Link>\n            <button\n              class=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarToggle\"\n              aria-controls=\"navbarToggle\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarToggle\">\n              <div class=\"navbar-nav mr-auto\">\n                <Link\n                  class=\"nav-item nav-link\"\n                  to=\"/\"\n                  style={{ color: \"#cbd5db\" }}\n                >\n                  Home\n                </Link>\n                <Link\n                  class=\"nav-item nav-link\"\n                  to=\"/create/\"\n                  style={{ color: \"#cbd5db\" }}\n                >\n                  create\n                </Link>\n              </div>\n              {this.props.isAuthenticated ? (\n                <Link\n                  class=\"nav-item nav-link\"\n                  to=\"/\"\n                  style={{ color: \"#cbd5db\" }}\n                  onClick={this.props.logout}\n                >\n                  Logout\n                </Link>\n              ) : (\n                <Link\n                  class=\"nav-item nav-link\"\n                  to=\"/login/\"\n                  style={{ color: \"#cbd5db\" }}\n                >\n                  Login\n                </Link>\n              )}\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(actions.logout()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NavBar);\n","import React from \"react\";\nimport \"./SideBar.css\";\nconst SideBar = (props) => {\n  return (\n    <div class=\"help\">\n      <h3>Our Sidebar</h3>\n      <p class=\"text-muted\">You can put any information here you'd like.</p>\n      <ul class=\"list-group\">\n        <li class=\"list-group-item list-group-item-light\">Latest Posts</li>\n        <li class=\"list-group-item list-group-item-light\">Announcements</li>\n        <li class=\"list-group-item list-group-item-light\">Calendars</li>\n        <li class=\"list-group-item list-group-item-light\">etc</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React, { Component } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport BaseRouter from \"./router\";\n\nimport NavBar from \"./components/Navbar/Navbar\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport * as actions from \"./store/actions/auth\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <NavBar {...this.props} />\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <BaseRouter />\n            </div>\n            <div class=\"col-md-4\">\n              <SideBar />\n            </div>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.token != null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst intialState = {\n  token: null,\n  error: null,\n  loading: null,\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true,\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    error: null,\n    loading: false,\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n  });\n};\n\nconst reducer = (state = intialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducer from \"./store/reducers/auth\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}